package {{=packageName}};

import com.google.gwt.activity.shared.Activity;
import com.google.gwt.place.shared.PlaceController;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.RequestContext;

import {{=placePackage}}.ProxyPlace;
{{#imports}}import {{=import}};
{{/imports}}
/**
 * Maps {@link ProxyPlace} instances to the {@link Activity} to run.
 */
public class {{=className}} {
  private final {{=requestFactory}} factory;
  private final PlaceController placeController;

  public {{=className}}({{=requestFactory}} factory, PlaceController placeController) {
    this.factory = factory;
    this.placeController = placeController;
  }

  public Activity getActivity(ProxyPlace place) {
    switch (place.getOperation()) {
      case DETAILS:
        return new {{=detailsActivity}}((EntityProxyId<{{=proxy}}>)place.getProxyId(), factory, 
          placeController, ScaffoldApp.isMobile() ? {{=mobileDetailsView}}.instance() : {{=desktopDetailsView}}.instance());

      case EDIT:
        return makeEditActivity(place);

      case CREATE:
        return makeCreateActivity();
    }

    throw new IllegalArgumentException("Unknown operation " + place.getOperation());
  }

  @SuppressWarnings("unchecked")
  private EntityProxyId<{{=proxy}}> coerceId(ProxyPlace place) {
    return (EntityProxyId<{{=proxy}}>) place.getProxyId();
  }

  private Activity makeCreateActivity() {
    {{=desktopEditView}}.instance().setCreating(true);
    Activity activity = new {{=editActivity}}(null, factory, ScaffoldApp.isMobile() ? {{=mobileEditView}}.instance() : {{=desktopEditView}}.instance(), placeController);

    return new {{=editActivityWrapper}}(factory, ScaffoldApp.isMobile() ? {{=mobileEditView}}.instance() : {{=desktopEditView}}.instance(), activity, null);
  }

  private Activity makeEditActivity(ProxyPlace place) {
    {{=desktopEditView}}.instance().setCreating(false);
    EntityProxyId<{{=proxy}}> proxyId = coerceId(place);
    Activity activity = new {{=editActivity}}(proxyId, factory, ScaffoldApp.isMobile() ? {{=mobileEditView}}.instance() : {{=desktopEditView}}.instance(), placeController);

    return new {{=editActivityWrapper}}(factory,  ScaffoldApp.isMobile() ? {{=mobileEditView}}.instance() : {{=desktopEditView}}.instance(), activity, proxyId);
  }
}
